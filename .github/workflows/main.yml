name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SQLite
        run: |
          # Create an SQLite database file
          sqlite3 mydb.sqlite

          # Run any necessary SQL commands to set up your database schema
          sqlite3 mydb.sqlite < schema.sql

          # You can also populate the database with initial data
          sqlite3 mydb.sqlite < initial_data.sql

      - name: Docker Login
        run: |
          # Log in to Docker Hub using your Docker Hub credentials
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./webapp  # Specify the directory containing your Dockerfile and app code
          push: true
          tags: chidi150c/sqlite3webapp:${{ github.sha }}  # Tag the Docker image with the GitHub SHA

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_IP }}  # DigitalOcean Droplet IP address
          username: ${{ secrets.DROPLET_USERNAME }}  # SSH username for the Droplet
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH private key for authentication
          port: ${{ secrets.SSH_PORT }}  # SSH port for the Droplet
          key_type: rsa
          script: |
            # Log in to Docker Hub again (not strictly necessary if already logged in)
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Stop and remove existing containers and images (if any)
            docker stop sqlite3webapp || true
            docker rm sqlite3webapp || true
            docker rmi chidi150c/sqlite3webapp:${{ github.sha }} || true

            # Pull the newly built Docker image
            docker pull chidi150c/sqlite3webapp:${{ github.sha }}

            # Run a new container from the image, mapping host port 8080 to container port 8080
            docker run -d -p 8080:8080 --name sqlite3webapp --restart=always --network my-network  chidi150c/sqlite3webapp:${{ github.sha }}
